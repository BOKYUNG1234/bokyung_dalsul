<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dalsul.user.review.dao.ReviewDAO">
	
	<sql id="reviewSearch">
			<if test="search=='review_content'">
				<![CDATA[ LOWER(review_content) like '%'|| LOWER( #{keyword} ) || '%' ]]>
			</if>
			<if test="search=='product_name'">
				<![CDATA[ LOWER(product_name) like '%'|| LOWER( #{keyword} ) || '%' ]]>
			</if>
			<if test="search=='review_no'">
				<![CDATA[ review_no = #{keyword} ]]>
			</if>
			<if test="search=='user_no'">
				<![CDATA[ user_no = #{keyword} ]]>
			</if>
			<if test="search=='review_rating'">
				<![CDATA[ review_rating = #{keyword} ]]>
			</if>
	</sql>
	
	
	<!-- 제품 번호로 리뷰 조회(상세페이지) pk.package_product_no = #{package_product_no} -->
	<select id="detailReviewList" parameterType="review" resultType="review">
		SELECT * FROM REVIEW_VIEW
		<if test="product_no != 0">
			WHERE product_no = #{product_no}
		</if>
        ORDER BY REVIEW_NO desc
	</select>
	

	
	<!-- 마이페이지 리뷰 조회 -->
	<select id="myReviewList" parameterType="review" resultType="review">
		SELECT * FROM REVIEW_VIEW
		<if test="user_no != null">
		WHERE USER_NO = #{user_no}
		</if>
		ORDER BY REVIEW_NO desc
	</select>
	

	
 
 
 	<!-- 관리자페이지 조회, 검색, 페이지네이션 
 	<select id="managerReviewList" parameterType="common" resultType="review">
		 <![CDATA[
			select 
			myReviewList.REVIEW_NO as REVIEW_NO, 
			myReviewList.ORDER_NO as ORDER_NO, 
			myReviewList.PRODUCT_NO as PRODUCT_NO, 
			myReviewList.USER_NO as USER_NO, 
			myReviewList.REVIEW_CONTENT as REVIEW_CONTENT, 
			myReviewList.REVIEW_RATING as REVIEW_RATING, 
			myReviewList.REVIEW_LIKE_COUNT as REVIEW_LIKE_COUNT, 
			TO_CHAR(myReviewList.REVIEW_DATE, 'YYYY-MM-DD') AS REVIEW_DATE, 
			(select count(review_no) from review where review_no = myReviewList.review_no) as r_cnt, 
			myReviewList.product_name as product_name,
			myReviewList.product_alcohol as product_alcohol,
			myReviewList.package_product_no as package_product_no,
			myReviewList.package_name as package_name
			from(
			    select /*+ INDEX_DESC(review review_no_index) */
			    rownum as rnum, r.REVIEW_NO, r.ORDER_NO, r.PRODUCT_NO, r.USER_NO, r.REVIEW_CONTENT, r.REVIEW_RATING, r.REVIEW_LIKE_COUNT, r.REVIEW_DATE, p.product_name, p.product_alcohol, pk.package_product_no, sp.package_name
			    from review r inner join product p on r.product_no = p.product_no join package_product pk on pk.product_no = p.product_no join SUBSCRIPTION_PACKAGE sp on sp.package_no = pk.package_no
			    where ]]>
		       <![CDATA[ rownum <= #{pageNum} * #{amount}
						    ) myReviewList
						WHERE rnum > (#{pageNum} -1) * #{amount}
						]]>
			   	<trim prefix="AND">
				    	<include refid="reviewSearch"></include>
				    </trim>
						
		  
	</select>
	-->
	<!--  관리자 페이지 리뷰 조회 (뷰) -->
 	<select id="managerReviewList" parameterType="review" resultType="review">
					
			SELECT * FROM REVIEW_VIEW
			<!-- <if test="orderByReviewNo=='orderByReviewNo'">
				order by review_no
			</if>
			<if test="orderByUserNo=='orderByUserNo'">
				order by user_no
			</if> -->
		
			<trim prefix="WHERE">
			    <include refid="reviewSearch"></include>
			</trim>
			
			
		
	</select>
	
	
	
	
<<<<<<< HEAD
	<!-- 제품 넘버로 리뷰 조회(상세페이지) -->
	<select id="detailReviewList" parameterType="review" resultType="review">
			SELECT R.REVIEW_NO, R.ORDER_NO, R.USER_NO, R.REVIEW_CONTENT, R.REVIEW_RATING, R.REVIEW_LIKE_COUNT, TO_CHAR(R.REVIEW_DATE, 'YYYY-MM-DD') AS REVIEW_DATE
			FROM REVIEW R
			JOIN PRODUCT_ORDER PO ON R.ORDER_NO = PO.ORDER_NO
			WHERE 1 = 1 AND PO.product_no = #{product_no}
			ORDER BY R.REVIEW_NO desc
=======
	<!--  리뷰 조회 쿼리문 하나로 합치기 -->
	<select id="reviewList" parameterType="review" resultType="review">
		SELECT * FROM REVIEW_VIEW
		<!-- 만약 제품 번호가 있으면 아래 쿼리 실행 -->
		<if test="product_no != 0">
			WHERE product_no = #{product_no}
		</if>
        ORDER BY REVIEW_NO desc
>>>>>>> master
	</select>
	




	<!--  리뷰 삭제  -->
	<delete id="myReviewDelete" parameterType="review">
		DELETE REVIEW
		WHERE REVIEW_NO = #{review_no}
	</delete>



	
	<!-- 마이페이지 리뷰작성 (#{order_no}, #{user_no}) -->
	<insert id="myReviewInsert" parameterType="review">
		insert into review(review_no, order_no, user_no, review_content, review_rating, review_like_count, review_date, product_no)
		values(review_no_seq.nextval, 2, #{user_no}, #{review_content}, #{review_rating}, 0, sysdate, #{product_no})
	</insert>





	<!-- 마이페이지 리뷰 업데이트 -->
	<update id="myReviewUpdate" parameterType="review">
		update review
		set review_content = #{review_content}, review_rating = #{review_rating}
		where review_no = #{review_no}
	</update>
	
	
	<!--  좋아요 클릭시  -->

	<update id="reviewLikeCountPlus" parameterType="review">
		UPDATE REVIEW
		SET REVIEW_LIKE_COUNT = REVIEW_LIKE_COUNT + 1
		WHERE REVIEW_NO = #{review_no}
	
	</update>


	<!-- 좋아요 개수 조회 -->
	<select id="reviewLikeCount" resultType="int">
		select review_like_count
		from review
		where review_no = #{review_no}
	</select>



	<!-- 전체 레코드 수 조회 -->
	<select id="reviewListCnt" parameterType="review" resultType="int">
		select count(*) from review
		<trim prefix=" where(" suffix=")" >
			<include refid="reviewSearch"></include>
		</trim>
	</select>





</mapper>